"""
Config File for Robot
"""


from wpilib import Solenoid, Compressor, DriverStation, CANTalon
import wpilib

from grt.sensors.attack_joystick import Attack3Joystick
from grt.sensors.xbox_joystick import XboxJoystick
from grt.sensors.gyro import Gyro
from grt.core import SensorPoller #, Constants
from grt.mechanism.drivetrain import DriveTrain
from grt.mechanism.drivecontroller import ArcadeDriveController
from grt.mechanism.motorset import Motorset
from grt.sensors.ticker import Ticker
from grt.sensors.encoder import Encoder
from teleop_controller import TeleopController
from grt.sensors.talon import Talon
from grt.mechanism.betamechs import Pickup
from grt.mechanism.betamechs import FourBar, TwoMotorPickup
from grt.mechanism.elevator import Elevator
from grt.mechanism.mechcontroller import MechController
from grt.macro.drive_macro import DriveMacro
#from grt.sensors.switch import Switch

#import grt.networktables as networktables

auto_enabled = False
recording_enabled = False


#Pin/Port map


#Talons

dt_right = CANTalon(1)
dt_r2 = CANTalon(2)
dt_r3 = CANTalon(3)
dt_r4 = CANTalon(4)

dt_left = CANTalon(7)
dt_l2 = CANTalon(8)
dt_l3 = CANTalon(9)
dt_l4 = CANTalon(10)

dt_r2.changeControlMode(CANTalon.ControlMode.Follower)
dt_r3.changeControlMode(CANTalon.ControlMode.Follower)
dt_r4.changeControlMode(CANTalon.ControlMode.Follower)
dt_l2.changeControlMode(CANTalon.ControlMode.Follower)
dt_l3.changeControlMode(CANTalon.ControlMode.Follower)
dt_l4.changeControlMode(CANTalon.ControlMode.Follower)
dt_r2.set(1)
dt_r3.set(1)
dt_r4.set(1)
dt_l2.set(7)
dt_l3.set(7)
dt_l4.set(7)



gyro = Gyro(1)



if auto_enabled:
	left_encoder = Encoder(4, 5, 1, reverse=True)
	right_encoder = Encoder(6, 7, 1)
	dt = DriveTrain(dt_left, dt_right, left_encoder=left_encoder, right_encoder=right_encoder)
	self.drive_macro = DriveMacro(dt, 10, 2)
	sp = SensorPoller((gyro, left_encoder, right_encoder))

else:
	dt = DriveTrain(dt_left, dt_right, left_encoder=None, right_encoder=None)
	sp = SensorPoller((gyro,))






#Analog Sensors

# Controllers
driver_stick = Attack3Joystick(0)
xbox_controller = XboxJoystick(1)
ac = ArcadeDriveController(dt, driver_stick)
hid_sp = SensorPoller((driver_stick, xbox_controller))  # human interface devices

if recording_enabled:
	from record_controller import RecordController, PlaybackController
	from collections import OrderedDict
	instructions = OrderedDict([("1, <class 'grt.sensors.talon.Talon'>", [0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137]), ("2, <class 'grt.sensors.talon.Talon'>", [0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137])])
	talon_arr = [dt_right, dt_left]
	record_controller = RecordController([talon_arr[0], talon_arr[1]])
	playback_controller = PlaybackController(instructions, talon_arr, revert_controller=drive_controller)
	teleop_controller = TeleopController(sp, hid_sp, driver_stick, ac, record_controller, playback_controller)
else:
	teleop_controller = TeleopController(sp, hid_sp)



#Mechs

fourbar_motor = CANTalon(12)
fourbar = FourBar(fourbar_motor)

elevator_motor = CANTalon(6)
elevator = Elevator(elevator_motor)

motor1 = CANTalon(5)
motor2 = CANTalon(11)
two_motor_pickup = TwoMotorPickup(motor1, motor2)

mc = MechController(elevator, fourbar, two_motor_pickup, driver_stick, xbox_controller)

ds = DriverStation.getInstance()





